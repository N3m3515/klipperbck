[include mainsail.cfg]
[include KAMP_Settings.cfg]
# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v1.2. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader". Also, select "Enable extra
# low-level configuration options" and configure "GPIO pins to set at
# micro-controller startup" to "!PC13".
 
# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.
 
# See the example.cfg file for a description of available parameters.
[exclude_object]
#Import Macros
[include macro.cfg]

[virtual_sdcard]
path: ~/printer_data/gcodes

[pause_resume]

#autotune
[autotune_tmc stepper_x]
motor: creality-42-34
tuning_goal: silent

[autotune_tmc stepper_y]
motor: creality-42-34
tuning_goal: silent

[autotune_tmc stepper_z]
motor: creality-42-34
tuning_goal: silent

[autotune_tmc extruder]
motor: creality-42-40
tuning_goal: silent

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
rotation_distance: 40
microsteps: 16
endstop_pin: ^PC0
position_endstop: 0
position_max: 246
homing_speed: 50
 
[tmc2209 stepper_x]
uart_pin: PB15
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 250
 
[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 16
endstop_pin: ^PC1
position_endstop: 0
position_min: 0
position_max: 234
homing_speed: 50
 
[tmc2209 stepper_y]
uart_pin: PC6
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 250
 
[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
rotation_distance: 8
microsteps: 16
endstop_pin:probe:z_virtual_endstop
position_max: 230
position_min: -3
 
 
[tmc2209 stepper_z]
uart_pin: PC10
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 5
 
[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD2
rotation_distance: 33.276
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 240
max_extrude_cross_section: 5
 
[tmc2209 extruder]
uart_pin: PC11
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 5
 
[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC3
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 75
 
[fan]
pin: PA8
 
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_37FFD6055252343016690143-if00

 
[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
#max_accel: 10000
#max_accel_to_decel: 10000
max_z_velocity: 5
max_z_accel: 100
 
[static_digital_output usb_pullup_enable]
pins: !PC13
 
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5, EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PB6, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB7, EXP1_10=<5V>
 
[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2
#kill_pin: ^!EXP2_8
 
[output_pin beeper]
pin: EXP1_1
 
[bltouch]
sensor_pin: ^PC2
control_pin: PA1
pin_up_touch_mode_reports_triggered: False
x_offset: -46
y_offset: -10
#z_offset: 1.6
pin_move_time: 0.4
samples: 2
samples_result: average 
 
[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 10,11
mesh_max: 200,214
probe_count: 6,6
fade_start: 1.0
mesh_pps: 2,2
 
[safe_z_home]
home_xy_position: 155,120
speed: 150.0
z_hop: 10.0
z_hop_speed: 10.0
 

[bed_screws]
screw1: 71, 45
screw1_name: front left screw
screw2: 240, 45
screw2_name: front right screw
screw3: 240, 214
screw3_name: rear right screw
screw4: 71, 214
screw4_name: rear left screw

[screws_tilt_adjust]
screw1: 71, 45
screw1_name: front left screw
screw2: 240, 45
screw2_name: front right screw
screw3: 240, 214
screw3_name: rear right screw
screw4: 71, 214
screw4_name: rear left screw
horizontal_move_z: 5.
speed: 100.
screw_thread: CW-M3


[firmware_retraction]
retract_length: 1
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 45
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
#unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.
# See the sample-lcd.cfg file for definitions of common LCD displays.


[temperature_sensor rpi]
sensor_type: temperature_host
#sensor_path:
#   The path to temperature system file. The default is
#   "/sys/class/thermal/thermal_zone0/temp" which is the temperature
#   system file on a Raspberry Pi computer.

[temperature_sensor mcu]
sensor_type: temperature_mcu
#sensor_mcu: mcu
#   The micro-controller to read from. The default is "mcu".
#sensor_temperature1:
#sensor_adc1:
#   Specify the above two parameters (a temperature in Celsius and an
#   ADC value as a float between 0.0 and 1.0) to calibrate the
#   micro-controller temperature. This may improve the reported
#   temperature accuracy on some chips. A typical way to obtain this
#   calibration information is to completely remove power from the
#   printer for a few hours (to ensure it is at the ambient
#   temperature), then power it up and use the QUERY_ADC command to
#   obtain an ADC measurement. Use some other temperature sensor on
#   the printer to find the corresponding ambient temperature. The
#   default is to use the factory calibration data on the
#   micro-controller (if applicable) or the nominal values from the
#   micro-controller specification.
#sensor_temperature2:
#sensor_adc2:
#   If sensor_temperature1/sensor_adc1 is specified then one may also
#   specify sensor_temperature2/sensor_adc2 calibration data. Doing so
#   may provide calibrated "temperature slope" information. The
#   default is to use the factory calibration data on the
#   micro-controller (if applicable) or the nominal values from the
#   micro-controller specification.

### Input Shaper

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345 hotend]
# Assuming `hotend` chip is connected to an RPi
#cs_pin: rpi:None

#[adxl345 bed]
# Assuming `bed` chip is connected to a printer MCU board
#cs_pin: rpi:None
#[adxl345]
#cs_pin: rpi:None
#[resonance_tester]
# Assuming the typical setup of the bed slinger printer
#accel_chip: adxl345
#probe_points:
#    155,120,20


##### Input Shaper #####

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.587
#*# pid_ki = 1.735
#*# pid_kd = 109.659
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.098
#*# pid_ki = 1.621
#*# pid_kd = 715.027
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.025000, -0.017500, 0.025000, 0.018750, 0.062500, 0.115000
#*# 	0.045000, 0.037500, 0.025000, 0.023750, 0.032500, 0.066250
#*# 	0.057500, 0.040000, 0.040000, 0.023750, 0.038750, 0.053750
#*# 	0.048750, 0.038750, 0.043750, 0.031250, 0.052500, 0.061250
#*# 	0.108750, 0.082500, 0.051250, 0.020000, 0.017500, -0.011250
#*# 	0.081250, 0.070000, 0.045000, 0.032500, 0.023750, 0.050000
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 200.0
#*# min_y = 11.0
#*# max_y = 214.0
#*#
#*# [bltouch]
#*# z_offset = 1.800
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 59.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 38.6
