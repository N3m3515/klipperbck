[respond]

# --------------------------- Start Print ----------------------------
#[gcode_macro START_PRINT]
#variable_bed_temp: 55
#variable_extruder_temp: 185
#gcode:
  # Start bed heating
#  M140 S{bed_temp}
  # Wait for bed to reach temperature
#  M190 S{bed_temp}

  # PreHeat Nozzle
#  M104 S160
  # Use absolute coordinates
#  G90
  # Reset the G-Code Z offset (adjust Z offset if needed)
  #SET_GCODE_OFFSET Z=0.0
#  SETUP_KAMP_MESHING
#  SETUP_VORON_PURGE
  # Home the printer
#  G28
  # Load Mesh
#  BED_MESH_CLEAR
#  BED_MESH_CALIBRATE
  #BED_MESH_PROFILE LOAD="default"

  # Move Z Axis up
#  G1 Z2.0 F3000
  # Move to start position
#  G1 X2.1 Y20 Z0.28 F5000.0
  
  # Set and wait for nozzle to reach temperature
#  M109 S{extruder_temp}

  # Reset Extruder
#  G92 E0
  # Draw the first line
#  G1 X2.1 Y160.0 Z0.28 F1500.0 E15
  # Reset Extruder
#  G92 E0
  # Move Z Axis up
#  G1 Z2.0 F3000
  # Print message on LCD
#  VORON_PURGE
#  M117 Printing...
# --------------------------------------------------------------------

# ---------------------------- End Print -----------------------------
[gcode_macro END_PRINT]
variable_machine_depth: 228
gcode:
    # Turn off bed
    M140 S0
    # Relative positionning
    G91
    # Retract a bit
    G1 E-2 F2700
    G1 E-2 Z0.2 F2400
    G1 X5 Y5 F3000

    # Raise Z more
    G1 Z10 F3000

    # Turn off extruder, and fan
    M104 S0
    M106 S0
    # Absolute positionning
    G90
    # Present print
    G1 X0 Y{machine_depth}
    # Disable steppers
    M84
    # Print message on LCD
    M117 Finished Print
# --------------------------------------------------------------------
[gcode_macro PRINT_START]
gcode:
### set defaults ###
  {% set extruder = params.EXTRUDER|default(60)|float %}
  {% set bed = params.BED|default(210)|float %}
    M140 S{bed}  
    G28
    G90
    M82
    #M83
     
    M190 S{bed}
    M104 S{extruder}
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    Smart_Park
    M109 S{extruder}    

    LINE_PURGE
    G92 E0


  



[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro POWER_ON_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="tplink_plug",
                             state="on")}

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="tplink_plug",
                             state="off")}


# Custom G29 that does (1) home all (2) get bed mesh (3) move nozzle to corner so it doesnt ooze on the bed while heating up.
#[gcode_macro BED_MESH_CALIBRATE]
#gcode:
#    G28
#    BED_MESH_CALIBRATE
#    G0 X10 Y10 Z10 F6000


[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

[idle_timeout]
gcode:
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60


[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}


[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}

#[gcode_macro update_git]
#gcode:
#    RUN_SHELL_COMMAND CMD=update_git_script

#[gcode_shell_command update_git_script]
#command: bash /home/pi/klipper-backup/script.sh
#timeout: 90.0
#verbose: True